From 06336b1cebd84c1fe2f747252a3c0d613aa8748c Mon Sep 17 00:00:00 2001
From: Jakub Bogusz <qboosh@pld-linux.org>
Date: Fri, 17 Nov 2017 18:30:36 +0100
Subject: [PLD] libdsk-java.patch (libdsk-1.4.2.spec)

PLD - Polish(ed) / PLD Linux Distribution (https://www.pld-linux.org/)

Added java patch, package libdsk.jar. Change storage place for
JAR file and add javadoc fixes.

Cherry-pick: https://raw.githubusercontent.com/pld-linux/libdsk/01606e0/libdsk-java.patch
Submitted-by: Jakub Bogusz <qboosh@pld-linux.org>

Signed-off-by: Stephan Linz <linz@li-pro.net>

diff --git a/lib/Makefile.am b/lib/Makefile.am
index dcc8bf1..9f4cc3a 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -93,7 +93,7 @@ JARHEADERS=$(HEADERPRE)_Drive.h \
 CLEANFILES=$(JARCLASSES) $(JARHEADERS)
 
 libdsk.jar:	$(JARCLASSES)
-	$(JAR) c0f $@ uk/*
+	$(JAR) c0f $@ uk/co/demon/seasip/libdsk/*.class
 	$(JAVADOC) -d $(top_srcdir)/doc/jni $(CLASSCPRE)
 
 $(CLASSDPRE)/%.class:   $(srcdir)/$(CLASSDPRE)/%.java
@@ -109,7 +109,8 @@ $(HEADERPRE)_%.h:         $(CLASSDPRE)/%.class
 
 $(srcdir)/dskjni.c:	$(JARHEADERS)
 
-install-exec-local:
-	$(mkinstalldirs) $(libdir)
-	if test x@LIBDSKJAR@ = x; then true; else $(INSTALL_DATA) @LIBDSKJAR@ $(DESTDIR)/$(libdir); fi
+javadir = /usr/share/java
 
+install-exec-local:
+	$(mkinstalldirs) $(DESTDIR)$(javadir)
+	if test x@LIBDSKJAR@ = x; then true; else $(INSTALL_DATA) @LIBDSKJAR@ $(DESTDIR)$(javadir); fi
diff --git a/lib/uk/co/demon/seasip/libdsk/Drive.java b/lib/uk/co/demon/seasip/libdsk/Drive.java
index 6db72ed..a72185d 100644
--- a/lib/uk/co/demon/seasip/libdsk/Drive.java
+++ b/lib/uk/co/demon/seasip/libdsk/Drive.java
@@ -120,7 +120,7 @@ public class Drive
   * @param cyl The physical cylinder containing the sector. 
   * @param head The physical head to use.
   * @param cylExpected The expected cylinder number in the sector header.
-  * @param cylExpected The expected head number in the sector header.
+  * @param headExpected The expected head number in the sector header.
   * @param sector The number of the sector.
   * @param sectorLen The number of bytes to transfer (may be less than a 
   *                 full sector).
@@ -165,7 +165,7 @@ public class Drive
   * @param cyl The physical cylinder containing the sector. 
   * @param head The physical head to use.
   * @param cylExpected The expected cylinder number in the sector header.
-  * @param cylExpected The expected head number in the sector header.
+  * @param headExpected The expected head number in the sector header.
   * @param sector The number of the sector.
   * @param sectorLen The number of bytes to transfer (may be less than a 
   *                 full sector).
@@ -209,7 +209,7 @@ public class Drive
   * @param cyl The physical cylinder containing the sector. 
   * @param head The physical head to use.
   * @param cylExpected The expected cylinder number in the sector header.
-  * @param cylExpected The expected head number in the sector header.
+  * @param headExpected The expected head number in the sector header.
   * @param sector The number of the sector.
   * @param sectorLen The number of bytes to transfer (may be less than a 
   *                 full sector).
@@ -228,7 +228,7 @@ public class Drive
 /** Format a track, using physical cylinder/sector.
  *
  * @param g The drive geometry to use.
- * @param c The physical cylinder to use. 
+ * @param cyl The physical cylinder to use. 
  * @param h The physical head to use.
  * @param fd An array of FormatData objects containing sector headers.
  * @param filler The byte with which to fill the empty sectors. 
@@ -252,7 +252,7 @@ public class Drive
   * it will just do repeated sector reads.
   * @param g The drive geometry to use. 
   * @param buf The buffer to be filled with data. 
-  * @param cyl The physical cylinder to use. 
+  * @param cylinder The physical cylinder to use. 
   * @param head The physical head to use.
   * @exception DskException If the read failed for any reason, or the driver cannot
   *                     read sectors.
@@ -280,10 +280,10 @@ public class Drive
   * use this call.
   * @param g The drive geometry to use. 
   * @param buf The buffer to be filled with data. 
-  * @param cyl The physical cylinder to use. 
+  * @param cylinder The physical cylinder to use. 
   * @param head The physical head to use.
   * @param cylExpected The expected cylinder number in the sector header.
-  * @param cylExpected The expected head number in the sector header.
+  * @param headExpected The expected head number in the sector header.
   * @exception DskException If the read failed for any reason, or the driver cannot
   *                     read sectors.
   */
@@ -294,7 +294,7 @@ public class Drive
  * Linux floppies.
  *
  * @param g The drive geometry to use.
- * @param cyl The physical cylinder to use. 
+ * @param cylinder The physical cylinder to use. 
  * @param head The physical head to use.
  * @param filler The byte with which to fill the empty sectors. 
  * @exception DskException If the format failed for any reason, or the driver cannot
@@ -402,7 +402,7 @@ public class Drive
 	public native void setComment(String c) throws DskException;
 
 /** Set the number of times an operation will be retried.
- * @param n The number of times to retry a read, write or format, 1 or more. 
+ * @param c The number of times to retry a read, write or format, 1 or more. 
  * @exception DskException If the number passed is 0. */
 	public native void setRetry(int c) throws DskException;	
 
